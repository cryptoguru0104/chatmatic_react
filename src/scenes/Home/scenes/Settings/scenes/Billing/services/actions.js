import { createActions } from "redux-actions";

const {
    getBillingInfo,
    getBillingInfoSucceed,
    getBillingInfoFailed,
    updateBillingInfo,
    updateBillingInfoSucceed,
    updateBillingInfoFailed,
    updatePrimaryCard,
    updatePrimaryCardSucceed,
    updatePrimaryCardFailed,
    postAppSumoLicense,
    postAppSumoLicenseSucceed,
    postAppSumoLicenseFailed,
    postLicense,
    postCoupon,
    postCouponSucceed,
    postCouponFailed,
    cancelSubscription,
    cancelSubscriptionSucceed,
    cancelSubscriptionFailed,
    updatePaymentInfo,
    updatePaymentInfoSucceed,
    updatePaymentInfoFailed,
    postSmsPlan,
    postSmsPlanSucceed,
    postSmsPlanFailed,
    getSmsPlan,
    getSmsPlanSucceed,
    getSmsPlanFailed,
    addBillingCard,
    deleteBillingCard,
    subscribeCard,
    clearCouponInput,
    subscribeStripe,
    subscribeStripeSucceed,
    subscribeStripeFailed,
    cancelPlan,
    cancelPlanFailed
} = createActions({
    GET_BILLING_INFO: pageId => ({ pageId }),
    GET_BILLING_INFO_SUCCEED: billingInfo => ({ billingInfo }),
    GET_BILLING_INFO_FAILED: error => ({ error }),
    UPDATE_BILLING_INFO: (pageId, newBillingInfo) => ({ pageId, newBillingInfo }),
    UPDATE_BILLING_INFO_SUCCEED: newBillingInfo => ({ newBillingInfo }),
    UPDATE_BILLING_INFO_FAILED: error => ({ error }),
    UPDATE_PRIMARY_CARD: (pageId, pageCardUid) => ({ pageId, pageCardUid }),
    UPDATE_PRIMARY_CARD_SUCCEED: pageCardUid => ({ pageCardUid }),
    UPDATE_PRIMARY_CARD_FAILED: error => ({ error }),
    POST_APP_SUMO_LICENSE: pageId => ({ pageId }),
    POST_APP_SUMO_LICENSE_SUCCEED: pageId => ({ pageId }),
    POST_APP_SUMO_LICENSE_FAILED: error => ({ error }),
    POST_LICENSE: (pageId, data) => ({ pageId, data }),
    POST_COUPON: (pageId, plan, cardId, coupon) => ({ pageId, plan, cardId, coupon }),
    POST_COUPON_SUCCEED: coupon => ({ coupon }),
    POST_COUPON_FAILED: error => ({ error }),
    CANCEL_SUBSCRIPTION: pageId => ({ pageId }),
    CANCEL_SUBSCRIPTION_SUCCEED: () => ({}),
    CANCEL_SUBSCRIPTION_FAILED: error => ({ error }),
    UPDATE_PAYMENT_INFO: (pageId, source) => ({ pageId, source }),
    UPDATE_PAYMENT_INFO_SUCCEED: billingInfo => ({ billingInfo }),
    UPDATE_PAYMENT_INFO_FAILED: error => ({ error }),
    POST_SMS_PLAN: (pageId, data) => ({ pageId, data }),
    POST_SMS_PLAN_SUCCEED: billingInfo => ({ billingInfo }),
    POST_SMS_PLAN_FAILED: error => ({ error }),
    GET_SMS_PLAN: pageId => ({ pageId }),
    GET_SMS_PLAN_SUCCEED: smsPlan => ({ smsPlan }),
    GET_SMS_PLAN_FAILED: error => ({ error }),
    ADD_BILLING_CARD: (pageId, cardToken, cardTokenToRemove) => ({ pageId, cardToken, cardTokenToRemove}),
    DELETE_BILLING_CARD: (pageId, cardTokenToRemove) => ({ pageId, cardTokenToRemove}),
    CLEAR_COUPON_INPUT: () => ({}),
    SUBSCRIBE_STRIPE: (pageId, plan, cardId, coupon, update) => ({ pageId, plan, cardId, coupon, update}),
    SUBSCRIBE_STRIPE_SUCCEED: (subscription) => ({ subscription }),
    SUBSCRIBE_STRIPE_FAILED: (error) => ({ error }),
    CANCEL_PLAN: (pageId) => ({ pageId }),
    CANCEL_PLAN_FAILED: (error) => ({ error })
});

export {
    getBillingInfo,
    getBillingInfoSucceed,
    getBillingInfoFailed,
    updateBillingInfo,
    updateBillingInfoSucceed,
    updateBillingInfoFailed,
    updatePrimaryCard,
    updatePrimaryCardSucceed,
    updatePrimaryCardFailed,
    postAppSumoLicense,
    postAppSumoLicenseSucceed,
    postAppSumoLicenseFailed,
    postLicense,
    postCoupon,
    postCouponSucceed,
    postCouponFailed,
    cancelSubscription,
    cancelSubscriptionSucceed,
    cancelSubscriptionFailed,
    updatePaymentInfo,
    updatePaymentInfoSucceed,
    updatePaymentInfoFailed,
    postSmsPlan,
    postSmsPlanSucceed,
    postSmsPlanFailed,
    getSmsPlan,
    getSmsPlanSucceed,
    getSmsPlanFailed,
    addBillingCard,
    deleteBillingCard,
    clearCouponInput,
    subscribeStripe,
    subscribeStripeSucceed,
    subscribeStripeFailed,
    cancelPlan,
    cancelPlanFailed
};
